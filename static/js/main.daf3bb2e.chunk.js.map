{"version":3,"sources":["assets/noPosterSmall.png","Components/Header/Header.js","Components/Header/index.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenters.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenters.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/TV/TVPresenters.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","error","loading","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","SearchPresenters","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","TVPresenter","TVContainer","TVPresenters","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daf3bb2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`\n\nconst List = styled.ul`\n  display: flex;\n`\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n))\n","import Header from './Header'\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n)\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n}\n\nexport default Section\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n)\n\nexport default Loader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n)\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\n\nexport default Message\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  font-size: 12px;\n`\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require('../assets/noPosterSmall.png')\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n)\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n}\n\nexport default Poster\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Section from 'Components/Section'\nimport Loader from 'Components/Loader'\nimport Message from 'Components/Message'\nimport Poster from 'Components/Poster'\n\nconst Container = styled.div`\n  padding: 20px;\n`\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Hojiflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie\n              >\n                {movie.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Playing\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie\n              >\n                {movie.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Playing\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie\n              >\n                {movie.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n)\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n}\n\nexport default HomePresenter\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '871646373e5b962c9bb8681906baba8f',\n    language: 'en-US'\n  }\n})\n\nexport const movieApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: term =>\n    api.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n}\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: term =>\n    api.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n}\n\nexport default api\n","import HomeContainer from './HomeContainer'\n\nexport default HomeContainer\n","import React from 'react'\nimport HomePresenter from './HomePresenters'\nimport { movieApi } from 'api'\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieApi.nowPlaying()\n      const {\n        data: { results: upcoming }\n      } = await movieApi.upcoming()\n      const {\n        data: { results: popular }\n      } = await movieApi.popular()\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      })\n    } catch {\n      this.setState({ error: \"Can't find Movies information.\" })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Loader from 'Components/Loader'\nimport Section from 'Components/Section'\nimport Message from 'Components/Message'\nimport Poster from 'Components/Poster'\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Hojiflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Result\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie\n              >\n                {movie.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Result\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              >\n                {show.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n)\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter\n","import SearchContainer from './SearchContainer'\n\nexport default SearchContainer\n","import React from 'react'\nimport SearchPresenters from './SearchPresenters'\nimport { movieApi, tvApi } from 'api'\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { searchTerm } = this.state\n    if (searchTerm !== '') {\n      this.searchByTerm()\n    }\n  }\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event\n    this.setState({\n      searchTerm: value\n    })\n  }\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state\n    this.setState({ loading: true })\n    try {\n      const {\n        data: { results: movieResults }\n      } = await movieApi.search(searchTerm)\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm)\n      this.setState({ movieResults, tvResults })\n      this.setState({ loading: true })\n    } catch {\n      this.setState({ error: \"Can't find results.\" })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state\n    return (\n      <SearchPresenters\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Loader from 'Components/Loader'\nimport Message from 'Components/Message'\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n  border-radius: 5px;\n`\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n`\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 20px;\n`\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`\n\nconst Item = styled.span``\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Hojiflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message text={error} color=\"#e74c3c\" />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | Hojiflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>*</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>*</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name}/`\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  )\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n}\n\nexport default DetailPresenter\n","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer\n","import React from 'react'\nimport DetailPresenter from './DetailPresenter'\nimport { movieApi, tvApi } from 'api'\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    const {\n      location: { pathname }\n    } = props\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/')\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props\n    const { isMovie } = this.state\n    const parseId = parseInt(id)\n    if (isNaN(parseId)) {\n      return push('/')\n    }\n    let result = null\n    try {\n      if (isMovie) {\n        ;({ data: result } = await movieApi.movieDetail(parseId))\n      } else {\n        ;({ data: result } = await tvApi.showDetail(parseId))\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" })\n    } finally {\n      this.setState({ loading: false, result })\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state\n    return <DetailPresenter result={result} error={error} loading={loading} />\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Section from 'Components/Section'\nimport Loader from 'Components/Loader'\nimport Message from 'Components/Message'\nimport Poster from 'Components/Poster'\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Hojiflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              >\n                {show.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              >\n                {show.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"AiringToday Shows\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              >\n                {show.title}\n              </Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n)\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n}\n\nexport default TVPresenter\n","import TVContainer from './TVContainer'\n\nexport default TVContainer\n","import React from 'react'\nimport TVPresenters from './TVPresenters'\nimport { tvApi } from 'api'\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated()\n      const {\n        data: { results: popular }\n      } = await tvApi.popular()\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday()\n      this.setState({ topRated, popular, airingToday })\n    } catch {\n      this.setState({ error: \"Can't find TV information.\" })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state\n    return (\n      <TVPresenters\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom'\nimport Header from 'Components/Header'\nimport Home from 'Routes/Home'\nimport Search from 'Routes/Search'\nimport Detail from 'Routes/Detail'\nimport TV from 'Routes/TV'\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n)\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a{\n      text-decoration:none;\n      color:inherit;\n  }\n  *{\n      box-sizing:border-box;\n  }\n  body{\n      font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n      font-size:12px;\n      background-color:rgba(20, 20, 20,1);\n      color:white;\n      padding-top:50px;\n  }\n`\n\nexport default globalStyles\n","import React, { Component } from 'react'\nimport Router from 'Components/Router'\nimport GlobalStyles from 'Components/GlobalStyles'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'Components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}